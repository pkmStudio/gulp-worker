// üîπ –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
import gulp from "gulp";
import fileInclude from "gulp-file-include";
import * as sass from "sass";
import gulpSass from "gulp-sass";
import rename from "gulp-rename";
import postcss from "gulp-postcss";
import autoprefixer from "autoprefixer"; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º PostCSS-–≤–µ—Ä—Å–∏—é
import cleanCSS from "gulp-clean-css";
import webp from "gulp-webp";
import newer from "gulp-newer";
import webpack from "webpack-stream";
import svgmin from "gulp-svgmin";
import browserSync from "browser-sync";  

const { src, dest, watch, series, parallel } = gulp;
const compileSass = gulpSass(sass); // –ò—Å–ø–æ–ª—å–∑—É–µ–º `gulp-sass` —Å `dart-sass`
const bs = browserSync.create();

// üîπ –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const paths = {
    html: "src/*.html",
    scss: "src/assets/scss/style.scss",
    js: "src/assets/js/main.js",
    images: "src/assets/img/**/*.{png,jpg}",
    fonts: "src/assets/fonts/**/*",
    svg: "src/assets/img/svg/**/*.svg"
};

// üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ HTML
const html = () =>
    src(paths.html)
        .pipe(fileInclude({ prefix: "@@", basepath: "src/assets/components" }))
        .pipe(dest("dist"));

// üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ SCSS ‚Üí CSS
const styles = () =>
    src(paths.scss)
        .pipe(compileSass().on("error", compileSass.logError)) // –ö–æ–º–ø–∏–ª—è—Ü–∏—è SCSS
        .pipe(postcss([autoprefixer()])) // ‚úÖ –ó–∞–º–µ–Ω–∏–ª–∏ `gulp-autoprefixer` –Ω–∞ PostCSS
        .pipe(dest("dist/assets/css"))
        .pipe(cleanCSS({ level: 2 }))
        .pipe(rename({ suffix: ".min" }))
        .pipe(dest("dist/assets/css"));

// üîπ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (WebP)
const images = () =>
    src(paths.images)
        .pipe(newer("dist/assets/img"))
        .pipe(webp())
        .pipe(dest("dist/assets/img"));

// üîπ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤
const fonts = () =>
    src(paths.fonts)
        .pipe(dest("dist/assets/fonts"));

// üîπ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è SVG
const svg = () =>
    src(paths.svg)
        .pipe(svgmin())
        .pipe(dest("dist/assets/img/svg"));

// üîπ –°–±–æ—Ä–∫–∞ JS —Å Webpack
const scripts = () =>
    src(paths.js)
        .pipe(
            webpack({
                mode: "production",
                output: { filename: "main.js" },
                module: {
                    rules: [{ test: /\.js$/, exclude: /node_modules/, use: "babel-loader" }],
                },
            })
        )
        .pipe(dest("dist/assets/js"));

// üîπ –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
const watchFiles = () => {
    watch(paths.html, html);
    watch("src/assets/scss/**/*.scss", styles);
    watch(paths.images, images);
    watch("src/assets/js/**/*.js", scripts);
};

// üîπ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const serve = () => {
    bs.init({
        server: "dist", // –£–∫–∞–∑—ã–≤–∞–µ–º `dist` –∫–∞–∫ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É
        notify: false, // –û—Ç–∫–ª—é—á–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        open: false, // –ù–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        ui: false
    });

    watch("dist/**/*.html").on("change", bs.reload); // –°–ª–µ–¥–∏–º –∑–∞ HTML
    watch("dist/assets/css/*.css").on("change", bs.reload); // –°–ª–µ–¥–∏–º –∑–∞ CSS
    watch("dist/assets/js/*.js").on("change", bs.reload); // –°–ª–µ–¥–∏–º –∑–∞ JS
}

// üîπ –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–¥–∞—á
export default series(
    parallel(html, styles, images, fonts, svg, scripts),
    parallel(serve, watchFiles)
);


